nor_vec_mpg = (1/sd_mpg)*(vec_mpg - mn_vec_mpg)
nor_vec_mpg
Boxplot(olive$oleic, olive$region, xlab = "Region", ylab = "Oleic")
boxplot(olive$oleic, olive$region, xlab = "Region", ylab = "Oleic")
## Paquetes de interes
packages = c("dslabs", "MASS", "scatterplot3d", "car")
## Se cargan o se instalan y cargan
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
Boxplot(olive$oleic, olive$region, xlab = "Region", ylab = "Oleic")
boxplot(nor_vec_mpg, main="Mpg")
vec_cyl = a$cyl
sd_cyl = sd(vec_cyl)
mn_cyl = mean(vec_cyl)
mn_vec_cyl= rep(c(mn_cyl), each=length(vec_cyl))
nor_vec_cyl = (1/sd_cyl)*(vec_cyl - mn_vec_cyl)
boxplot(nor_vec_cyl, main="cyl")
boxplot(a$cyl)
boxplot(a$mpg)
boxplot(nor_vec_mpg, nor_vec_cyl, names = c("Mpg", "Cyl"))
vec_disp = a$disp
sd_disp = sd(vec_disp)
mn_disp = mean(vec_disp)
mn_vec_disp= rep(c(mn_disp), each=length(vec_disp))
nor_vec_disp = (1/sd_disp)*(vec_disp - mn_vec_disp)
boxplot(nor_vec_disp, main="disp")
vec_hp = a$hp
sd_hp = sd(vec_hp)
mn_hp = mean(vec_hp)
mn_vec_hp= rep(c(mn_hp), each=length(vec_hp))
nor_vec_hp = (1/sd_hp)*(vec_hp - mn_vec_hp)
boxplot(nor_vec_hp, main="hp")
vec_drat = a$drat
sd_drat = sd(vec_drat)
mn_drat = mean(vec_drat)
mn_vec_drat= rep(c(mn_drat), each=length(vec_drat))
nor_vec_drat = (1/sd_drat)*(vec_drat - mn_vec_drat)
boxplot(nor_vec_drat, main="drat")
vec_wt = a$wt
sd_wt = sd(vec_wt)
mn_wt = mean(vec_wt)
mn_vec_wt= rep(c(mn_wt), each=length(vec_wt))
nor_vec_wt = (1/sd_wt)*(vec_wt - mn_vec_wt)
boxplot(nor_vec_wt, main="wt")
vec_qsec = a$qsec
sd_qsec = sd(vec_qsec)
mn_qsec = mean(vec_qsec)
mn_vec_qsec= rep(c(mn_qsec), each=length(vec_qsec))
nor_vec_qsec = (1/sd_qsec)*(vec_qsec - mn_vec_qsec)
boxplot(nor_vec_qsec, main="qsec")
vec_vs = a$vs
sd_vs = sd(vec_vs)
mn_vs = mean(vec_vs)
mn_vec_vs= rep(c(mn_vs), each=length(vec_vs))
nor_vec_vs = (1/sd_vs)*(vec_vs - mn_vec_vs)
boxplot(nor_vec_vs, main="vs")
vec_am = a$am
sd_am = sd(vec_am)
mn_am = mean(vec_am)
mn_vec_am= rep(c(mn_am), each=length(vec_am))
nor_vec_am = (1/sd_am)*(vec_am - mn_vec_am)
boxplot(nor_vec_am, main="am")
vec_gear = a$gear
sd_gear = sd(vec_gear)
mn_gear = mean(vec_gear)
mn_vec_gear= rep(c(mn_gear), each=length(vec_gear))
nor_vec_gear = (1/sd_gear)*(vec_gear - mn_vec_gear)
boxplot(nor_vec_gear, main="gear")
vec_carb = a$carb
sd_carb = sd(vec_carb)
mn_carb = mean(vec_carb)
mn_vec_carb= rep(c(mn_carb), each=length(vec_carb))
nor_vec_carb = (1/sd_carb)*(vec_carb - mn_vec_carb)
boxplot(nor_vec_carb, main="carb")
#Juntamos todos
cols = c("Mpg", "Cyl", "Disp", "Hp", "Drat", "Wt", "Qsec", "VS", "Am", "Gear", "Carb")
length(cols)
cols = c("Mpg", "Cyl", "Disp", "Hp", "Drat", "Wt", "Qsec", "VS", "Am", "Gear", "Carb")
boxplot(nor_vec_mpg, nor_vec_cyl, nor_vec_disp, nor_vec_hp, nor_vec_hp, nor_vec_drat, nor_vec_wt,nor_vec_qsec, nor_vec_vs, nor_vec_am, nor_vec_gear, nor_vec_carb, names = cols)
cols = c("Mpg", "Cyl", "Disp", "Hp", "Drat", "Wt", "Qsec", "VS", "Am", "Gear", "Carb")
boxplot(nor_vec_mpg, nor_vec_cyl, nor_vec_disp, nor_vec_hp, nor_vec_drat, nor_vec_wt,nor_vec_qsec, nor_vec_vs, nor_vec_am, nor_vec_gear, nor_vec_carb, names = cols)
clc <- function(){
cat("\014")
}
clc()
#Ejercicio 3
olive_acids <- subset(olive, select = c(-region, -area, -oleic, -linoleic, -linolenic, -arachidic, -eicosenoic))
scatterplotMatrix(~ +., data = olive_acids, diagonal=list(method ="boxplot"))
clc <- function(){
cat("\014")
}
clc()
## Paquetes de interes
packages = c("dslabs", "MASS", "scatterplot3d", "car")
## Se cargan o se instalan y cargan
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
#Ejercicio 1
Boxplot(olive$oleic, olive$region, xlab = "Region", ylab = "Oleic")
#######################################################################
#Ejercio 2.1
a = mtcars
head(a)
summary(a)
#Variable mpg:
# Media = 20.09
# Mediana = 19.20
freq_ord=sort(table(a$mpg),decreasing = TRUE); freq_ord
# Moda = 10.4
# Desviaci?n estandar = 6.026948
sd(a$mpg)
#Variable cyl:
# Media = 6.188
# Mediana = 6.000
freq_ord=sort(table(a$cyl),decreasing = TRUE); freq_ord
# Moda = 8
# Desviaci?n estandar = 1.785922
sd(a$cyl)
#Variable disp:
# Media = 230.7
# Mediana = 196.3
freq_ord=sort(table(a$disp),decreasing = TRUE); freq_ord
# Moda = 275.8
# Desviaci?n estandar = 123.9387
sd(a$disp)
#Variable hp:
# Media = 146.7
# Mediana = 123.0
freq_ord=sort(table(a$hp),decreasing = TRUE); freq_ord
# Moda = 110
# Desviaci?n estandar = 68.56287
sd(a$hp)
#Variable drat:
# Media = 3.597
# Mediana = 3.695
freq_ord=sort(table(a$drat),decreasing = TRUE); freq_ord
# Moda = 3.07
# Desviaci?n estandar = 0.5346787
sd(a$drat)
#Variable wt:
# Media = 3.217
# Mediana = 3.325
freq_ord=sort(table(a$wt),decreasing = TRUE); freq_ord
# Moda = 3.44
# Desviaci?n estandar = 0.9784574
sd(a$wt)
#Variable qsec:
# Media = 17.85
# Mediana = 17.71
freq_ord=sort(table(a$qsec),decreasing = TRUE); freq_ord
# Moda = 17.02
# Desviaci?n estandar = 1.786943
sd(a$qsec)
#Variable vs: Esta variable es de Bernulli, por lo que no se le puede calcular la media ni la mediana
# Media =
# Mediana =
freq_ord=sort(table(a$vs),decreasing = TRUE); freq_ord
# Moda = 0
# Desviaci?n estandar =
sd(a$vs)
#Variable am:Esta variable es de Bernulli, por lo que no se le puede calcular la media ni la mediana
# Media =
# Mediana =
freq_ord=sort(table(a$am),decreasing = TRUE); freq_ord
# Moda = Transmision automatica (0)
# Desviaci?n estandar =
sd(a$am)
#Variable gear:
# Media = 3.688
# Mediana = 4.000
freq_ord=sort(table(a$gear),decreasing = TRUE); freq_ord
# Moda = 3
# Desviaci?n estandar = 0.7378041
sd(a$gear)
#Variable carb:
# Media = 2.812
# Mediana = 2.000
freq_ord=sort(table(a$carb),decreasing = TRUE); freq_ord
# Moda = 2
# Desviaci?n estandar = 1.6152
sd(a$carb)
#######################################################################
#Ejercio 2.2
boxplot(a$carb)
# Variables con valores at?picos: hp, wt, qsec, carb. Las hallamos usando boxplot.
#######################################################################
#Ejercio 2.3
#Histograma mpg
hist(a$mpg, main = "Mpg", xlab = "Mpg", breaks = 5)
#Histograma cyl
hist(a$cyl, main = "cyl", xlab = "cyl", breaks = 5)
#Histograma disp
hist(a$disp, main = "disp", xlab = "disp", breaks = 5)
#Histograma hp
hist(a$hp, main = "hp", xlab = "hp", breaks = 5)
#Histograma drat
hist(a$drat, main = "drat", xlab = "drat", breaks = 5)
#Histograma wt
hist(a$wt, main = "wt", xlab = "wt", breaks = 5)
#Histograma qsec
hist(a$qsec, main = "qsec", xlab = "qsec", breaks = 5)
#Histograma vs
hist(a$vs, main = "vs", xlab = "vs", breaks = 5)
#Histograma am
hist(a$am, main = "am", xlab = "am", breaks = 5)
#Histograma gear
hist(a$gear, main = "gear", xlab = "gear", breaks = 5)
#Histograma carb
hist(a$carb, main = "carb", xlab = "carb", breaks = 5)
#######################################################################
#Ejercio 2.4
# Normalizamos el vector que contiene
# las observaciones de mpg
vec_mpg = a$mpg
sd_mpg = sd(vec_mpg)
mn_mpg = mean(vec_mpg)
mn_vec_mpg= rep(c(mn_mpg), each=length(vec_mpg))
nor_vec_mpg = (1/sd_mpg)*(vec_mpg - mn_vec_mpg)
boxplot(nor_vec_mpg, main="Mpg")
# Normalizamos el vector que contiene
# las observaciones de cyl
vec_cyl = a$cyl
sd_cyl = sd(vec_cyl)
mn_cyl = mean(vec_cyl)
mn_vec_cyl= rep(c(mn_cyl), each=length(vec_cyl))
nor_vec_cyl = (1/sd_cyl)*(vec_cyl - mn_vec_cyl)
boxplot(nor_vec_cyl, main="cyl")
# Normalizamos el vector que contiene
# las observaciones de disp
vec_disp = a$disp
sd_disp = sd(vec_disp)
mn_disp = mean(vec_disp)
mn_vec_disp= rep(c(mn_disp), each=length(vec_disp))
nor_vec_disp = (1/sd_disp)*(vec_disp - mn_vec_disp)
boxplot(nor_vec_disp, main="disp")
# Normalizamos el vector que contiene
# las observaciones de hp
vec_hp = a$hp
sd_hp = sd(vec_hp)
mn_hp = mean(vec_hp)
mn_vec_hp= rep(c(mn_hp), each=length(vec_hp))
nor_vec_hp = (1/sd_hp)*(vec_hp - mn_vec_hp)
boxplot(nor_vec_hp, main="hp")
# Normalizamos el vector que contiene
# las observaciones de drat
vec_drat = a$drat
sd_drat = sd(vec_drat)
mn_drat = mean(vec_drat)
mn_vec_drat= rep(c(mn_drat), each=length(vec_drat))
nor_vec_drat = (1/sd_drat)*(vec_drat - mn_vec_drat)
boxplot(nor_vec_drat, main="drat")
# Normalizamos el vector que contiene
# las observaciones de wt
vec_wt = a$wt
sd_wt = sd(vec_wt)
mn_wt = mean(vec_wt)
mn_vec_wt= rep(c(mn_wt), each=length(vec_wt))
nor_vec_wt = (1/sd_wt)*(vec_wt - mn_vec_wt)
boxplot(nor_vec_wt, main="wt")
# Normalizamos el vector que contiene
# las observaciones de qsec
vec_qsec = a$qsec
sd_qsec = sd(vec_qsec)
mn_qsec = mean(vec_qsec)
mn_vec_qsec= rep(c(mn_qsec), each=length(vec_qsec))
nor_vec_qsec = (1/sd_qsec)*(vec_qsec - mn_vec_qsec)
boxplot(nor_vec_qsec, main="qsec")
# Normalizamos el vector que contiene
# las observaciones de vs
vec_vs = a$vs
sd_vs = sd(vec_vs)
mn_vs = mean(vec_vs)
mn_vec_vs= rep(c(mn_vs), each=length(vec_vs))
nor_vec_vs = (1/sd_vs)*(vec_vs - mn_vec_vs)
boxplot(nor_vec_vs, main="vs")
# Normalizamos el vector que contiene
# las observaciones de am
vec_am = a$am
sd_am = sd(vec_am)
mn_am = mean(vec_am)
mn_vec_am= rep(c(mn_am), each=length(vec_am))
nor_vec_am = (1/sd_am)*(vec_am - mn_vec_am)
boxplot(nor_vec_am, main="am")
# Normalizamos el vector que contiene
# las observaciones de gear
vec_gear = a$gear
sd_gear = sd(vec_gear)
mn_gear = mean(vec_gear)
mn_vec_gear= rep(c(mn_gear), each=length(vec_gear))
nor_vec_gear = (1/sd_gear)*(vec_gear - mn_vec_gear)
boxplot(nor_vec_gear, main="gear")
# Normalizamos el vector que contiene
# las observaciones de carb
vec_carb = a$carb
sd_carb = sd(vec_carb)
mn_carb = mean(vec_carb)
mn_vec_carb= rep(c(mn_carb), each=length(vec_carb))
nor_vec_carb = (1/sd_carb)*(vec_carb - mn_vec_carb)
boxplot(nor_vec_carb, main="carb")
#Juntamos todos
cols = c("Mpg", "Cyl", "Disp", "Hp", "Drat", "Wt", "Qsec", "VS", "Am", "Gear", "Carb")
boxplot(nor_vec_mpg, nor_vec_cyl, nor_vec_disp, nor_vec_hp, nor_vec_drat, nor_vec_wt,nor_vec_qsec, nor_vec_vs, nor_vec_am, nor_vec_gear, nor_vec_carb, names = cols)
##########################
#Ejercicio 3
olive_acids <- subset(olive, select = c(-region, -area, -oleic, -linoleic, -linolenic, -arachidic, -eicosenoic))
scatterplotMatrix(~ +., data = olive_acids, diagonal=list(method ="boxplot"))
#Ejercicio 4
#Graficar un diagrama de dispersi�n en 3D, de tres variables num�ricas del dataset olive graficando en colores diferentes las regiones.
colors <- c("#924e7d", "#E69F00", "#56B4E9")
colors <- colors[as.numeric(olive$region)]
scatterplot3d(olive$palmitic,olive$palmitoleic,olive$stearic,pch = 16, color=colors,
xlab="palmitic", ylab="palmitoleic", zlab="stearic")
plot(x1, x2)
plot(x1, x2)
x1 = c(-6, -3, -2, 1, 2, 5, 6, 8)
x2 = c(-2, -3, 1, -1, 2, 1, 5, 3)
plot(x1, x2)
x1 = c(-6, -3, -2, 1, 2, 5, 6, 8)
x2 = c(-2, -3, 1, -1, 2, 1, 5, 3)
plot(x1, x2, xlab = "x1", ylab = "x2")
plot(x1, x2, xlab = "x1", ylab = "x2")
?plot
plot(x1, x2, xlab = "x1", ylab = "x2", ann = par("ann"))
plot(x1, x2, xlab = "x1", ylab = "x2")
s11 = cov(x1,x1)
s11 = cov(x1,x1)
s11
var(x1,x1)
s11 = cov(x1,x2)
s11
s11 = cov(x1,x1)
s22 = cov(x2,x2)
s22
var(x2)
s12 = cov(x1,x2)
s12
s11 = cov(x1,x1)
s22 = cov(x2,x2)
s12 = cov(x1,x2)
teta = 26
sin(teta)
teta = 45
sin(teta)
-x1
teta = 45
x1_barra = x1*cos(teta) + x2*sin(teta)
x2_barra = -x1*sin(teta) + x2*cos(teta)
summary(x1_barra)
summary(x2_barra)
teta = 26
x1_barra = x1*cos(teta) + x2*sin(teta)
x2_barra = -x1*sin(teta) + x2*cos(teta)
summary(x1_barra)
summary(x2_barra)
#Ejericio 5.c
var_x1_barra = var(x1_barra)
var_x1_barra
x1_barra
var_x2_barra = var(x2_barra)
var_x2_barra
s11_barra = var(x1_barra)
s22_barra = var(x2_barra)
s11
s11 = cov(x1,x1)
s11
x1 = c(-6, -3, -2, 1, 2, 5, 6, 8)
x2 = c(-2, -3, 1, -1, 2, 1, 5, 3)
#Ejercicio 5.a
plot(x1, x2, xlab = "x1", ylab = "x2")
s11 = cov(x1,x1)
s22 = cov(x2,x2)
s12 = cov(x1,x2)
s11
s22
s12
?sum
x1_t = x1-mean(x1)
x1_t
mean(x1)
2**3
2^3
skk = (1/length(x1))*sum((x1-mean(x1))^2)
skk
s22 = (1/length(x2))*sum((x2-mean(x2))^2)
s22
s12 = (1/length(x1))*sum((x1-mean(x1))*(x2-mean(x2)))
s12
x1_barra
cos(teta)
teta = 26
cos(teta)
cos(pi*teta)
?degrees
?sin
cos(pi/teta)
teta = 26
cos(pi/teta)
cos_26 = 0.899
sin_26 = 0.438
x1_barra = x1*cos_26 + x2*sin_26
x1_barra
x2_barra = -x1*sin_26 + x2*cos_26
x2_barra
x2_barra = -1*x1*sin_26 + x2*cos_26
x2_barra
x1 = c(-6, -3, -2, 1, 2, 5, 6, 8)
x2 = c(-2, -3, 1, -1, 2, 1, 5, 3)
#Ejercicio 5.a
plot(x1, x2, xlab = "x1", ylab = "x2")
s11 = (1/length(x1))*sum((x1-mean(x1))^2)
s22 = (1/length(x2))*sum((x2-mean(x2))^2)
s12 = (1/length(x1))*sum((x1-mean(x1))*(x2-mean(x2)))
#Ejercicio 5.b
cos_26 = 0.899
sin_26 = 0.438
x1_barra = x1*cos_26 + x2*sin_26
x2_barra = -1*x1*sin_26 + x2*cos_26
x2_barra = -1*x1*sin_26 + x2*cos_26
summary(x1_barra)
summary(x2_barra)
x2_barra
s11_barra = (1/length(x1_barra))*sum((x1_barra-mean(x1_barra))^2)
s22_barra = (1/length(x2_barra))*sum((x2_barra-mean(x2_barra))^2)
s11_barra
s22_barra
s22_barra = (1/length(x2_barra))*sum((x2_barra-mean(x2_barra))^2)
s22_barra
s12_barra = (1/length(x1_barra))*sum((x1_barra-mean(x1_barra))*(x2_barra-mean(x2_barra)))
s12_barra
x1_5_barra = x1_5_barra*cos_26+x2_5*sin_26
x2_5_barra = -x1_5_barra*sin_26+x2_5*cos_26
x1_5 = 4
x2_5 = -2
x1_5_barra = x1_5_barra*cos_26+x2_5*sin_26
x2_5_barra = -x1_5_barra*sin_26+x2_5*cos_26
x1_5 = 4
x2_5 = -2
x1_5_barra = x1_5_barra*cos_26+x2_5*sin_26
x2_5_barra = -x1_5_barra*sin_26+x2_5*cos_26
x1_5 = 4
x2_5 = -2
x1_5_barra = x1_5*cos_26+x2_5*sin_26
x2_5_barra = -x1_5*sin_26+x2_5*cos_26
d = sqrt(((x1_5_barra)^2/s11_barra)+((x2_5_barra)^2/s22_barra))
x1_5_barra
x2_5_barra
cos(pi*26/180)
sin(pi*26/180)
cos_26 = cos(pi*26/180)
sin_26 = sin(pi*26/180)
x1_barra = x1*cos_26 + x2*sin_26
x2_barra = -1*x1*sin_26 + x2*cos_26
summary(x1_barra)
summary(x2_barra)
#Ejericio 5.c
s11_barra = (1/length(x1_barra))*sum((x1_barra-mean(x1_barra))^2)
s22_barra = (1/length(x2_barra))*sum((x2_barra-mean(x2_barra))^2)
#Ejericio 5.d
x1_5 = 4
x2_5 = -2
x1_5_barra = x1_5*cos_26+x2_5*sin_26
x2_5_barra = -x1_5*sin_26+x2_5*cos_26
d = sqrt(((x1_5_barra)^2/s11_barra)+((x2_5_barra)^2/s22_barra))
a11 = ((cos_26^2) / ((cos_26^2*s11)+(2*sin_26*cos_26*s12)+(sin_26^2*s22))) + ((sin_26^2)/(cos_26^2*s22-2*sin_26*cos_26*s12+sin_26^2*s11))
a22 = ((sin_26^2)/(cos_26^2*s11+2*sin_26*cos_26*s12+sin_26^2*s22)) + ((cos_26^2)/(cos_26^2*s22-2*sin_26*cos_26*s12+sin_26^2*s11))
a12 = ((cos_26*sin_26)/(cos_26^2*s11+2*sin_26*cos_26*s12+sin_26^2*s22)) - ((sin_26*cos_26)/(cos_26^2*s22-2*sin_26*cos_26*s12+sin_26*s11))
d_5_e = sqrt(a11*x1_5^2+2*a12*x1_5*x2_5+a22*x2_5^2)
d_5_e
s11
s11
s22
s12
cos_26
a11 = ((cos_26^2) / ((cos_26^2*s11)+(2*sin_26*cos_26*s12)+(sin_26^2*s22))) + ((sin_26^2)/((cos_26^2)*s22-2*sin_26*cos_26*s12+(sin_26^2)*s11))
a22 = ((sin_26^2)/(cos_26^2*s11+2*sin_26*cos_26*s12+sin_26^2*s22)) + ((cos_26^2)/(cos_26^2*s22-2*sin_26*cos_26*s12+sin_26^2*s11))
a12 = ((cos_26*sin_26)/(cos_26^2*s11+2*sin_26*cos_26*s12+sin_26^2*s22)) - ((sin_26*cos_26)/(cos_26^2*s22-2*sin_26*cos_26*s12+sin_26*s11))
d_5_e = sqrt(a11*x1_5^2+2*a12*x1_5*x2_5+a22*x2_5^2)
d_5_e
d
x1_5
x2_5
d_5_e = sqrt(a11*(x1_5^2)+2*a12*x1_5*x2_5+a22*x2_5^2)
?Rmarkdown
??Rmarkdown
install.packages("tinytex")
install.packages("tinytex")
```{r}
packages = c("dslabs", "MASS", "scatterplot3d", "car")
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
Boxplot(olive$oleic, olive$region, xlab = "Region", ylab = "Oleic")
